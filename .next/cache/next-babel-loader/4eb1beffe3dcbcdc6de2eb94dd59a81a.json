{"ast":null,"code":"import { observable, computed, action, decorate } from 'mobx';\n\nclass MovieStore {\n  constructor() {\n    this.movielist = [];\n  }\n\n  get count() {\n    return this.movielist.length;\n  }\n\n  set_movies(array) {\n    console.log('set movie', array);\n    this.movielist = array || [];\n  }\n\n  add_movie(object) {\n    this.movielist.push(object);\n  }\n\n  remove_movie(index) {\n    this.movielist.splice(this.movielist.indexOf(index), 1);\n  }\n\n}\n\ndecorate(MovieStore, {\n  movielist: observable,\n  count: computed,\n  set_movies: action,\n  add_movies: action,\n  remove_movie: action\n});\nconst store = new MovieStore();\nexport default store;","map":{"version":3,"sources":["/home/commodore64/ombd-next/store.js"],"names":["observable","computed","action","decorate","MovieStore","movielist","count","length","set_movies","array","console","log","add_movie","object","push","remove_movie","index","splice","indexOf","add_movies","store"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,MAAvD;;AAEA,MAAMC,UAAN,CAAiB;AAAA;AAAA,SACbC,SADa,GACD,EADC;AAAA;;AAGb,MAAIC,KAAJ,GAAY;AACR,WAAO,KAAKD,SAAL,CAAeE,MAAtB;AACH;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AACA,SAAKJ,SAAL,GAAiBI,KAAK,IAAI,EAA1B;AACH;;AAEDG,EAAAA,SAAS,CAACC,MAAD,EAAS;AACd,SAAKR,SAAL,CAAeS,IAAf,CAAoBD,MAApB;AACH;;AAEDE,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,SAAKX,SAAL,CAAeY,MAAf,CAAsB,KAAKZ,SAAL,CAAea,OAAf,CAAuBF,KAAvB,CAAtB,EAAqD,CAArD;AACH;;AAlBY;;AAqBjBb,QAAQ,CAACC,UAAD,EAAa;AACjBC,EAAAA,SAAS,EAAEL,UADM;AAEjBM,EAAAA,KAAK,EAAEL,QAFU;AAGjBO,EAAAA,UAAU,EAAEN,MAHK;AAIjBiB,EAAAA,UAAU,EAAEjB,MAJK;AAKjBa,EAAAA,YAAY,EAAEb;AALG,CAAb,CAAR;AASA,MAAMkB,KAAK,GAAG,IAAIhB,UAAJ,EAAd;AACA,eAAegB,KAAf","sourcesContent":["import { observable, computed, action, decorate}  from 'mobx';\n\nclass MovieStore {\n    movielist = [];\n\n    get count() {\n        return this.movielist.length;\n    }\n\n    set_movies(array) {\n        console.log('set movie', array);\n        this.movielist = array || [];\n    }\n\n    add_movie(object) {\n        this.movielist.push(object);\n    }\n\n    remove_movie(index) {\n        this.movielist.splice(this.movielist.indexOf(index), 1);\n    };\n}\n\ndecorate(MovieStore, {\n    movielist: observable,\n    count: computed,\n    set_movies: action,\n    add_movies: action,\n    remove_movie: action\n});\n\n\nconst store = new MovieStore();\nexport default store;"]},"metadata":{},"sourceType":"module"}