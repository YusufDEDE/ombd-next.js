{"ast":null,"code":"var _jsxFileName = \"/home/commodore64/ombd-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport localStorage from 'mobx-localstorage';\n\nconst Index = props => __jsx(\"div\", {\n  className: \"container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, __jsx(\"form\", {\n  className: \"form-inline\",\n  id: \"form\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"column\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"input\", {\n  type: \"text\",\n  className: \"form-control\",\n  placeholder: \"First name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n})), __jsx(\"div\", {\n  className: \"column\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, __jsx(\"input\", {\n  type: \"text\",\n  className: \"form-control\",\n  placeholder: \"Last name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n})), __jsx(\"div\", {\n  className: \"column\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(\"select\", {\n  id: \"inputState\",\n  className: \"form-control\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(\"option\", {\n  selected: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Choose...\"), __jsx(\"option\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"...\"))), __jsx(\"button\", {\n  type: \"submit\",\n  className: \"btn btn-info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Search\"))), __jsx(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), __jsx(\"center\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"div\", {\n  className: \"column\",\n  key: show.id,\n  id: \"poster\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card text-white bg-primary mb-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, show.name, __jsx(\"h4\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, show.type), __jsx(\"img\", {\n  src: show.image.medium,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}))))))));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  if (false) {\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/commodore64/ombd-next/pages/index.js"],"names":["fetch","localStorage","Index","props","shows","map","show","id","name","type","image","medium","getInitialProps","res","data","json","console","log","length","setItem","JSON","stringify","entry"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport localStorage from 'mobx-localstorage';\n\n\n\nconst Index = props => (\n    \n    <div className=\"container\">\n        <form className=\"form-inline\" id=\"form\">\n          <div className=\"row\">\n            <div className=\"column\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\n            </div>\n            <div className=\"column\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\n            </div>\n            <div className=\"column\">\n              <select id=\"inputState\" className=\"form-control\">\n                <option selected>Choose...</option>\n                <option>...</option>\n              </select>\n            </div>\n            <button type=\"submit\" className=\"btn btn-info\">Search</button>\n          </div>\n        </form>\n        <hr/>\n        <center>\n        <div className=\"row\">\n        {props.shows.map(show => (\n        <div className=\"column\" key={show.id} id=\"poster\">\n            <div className=\"card text-white bg-primary mb-4\">\n                <div className=\"card-header\">{show.name}\n                    <h4 className=\"card-title\">{show.type}</h4>\n                    <img src={show.image.medium} />\n                </div>\n            </div>\n        </div>\n        ))}\n        </div>\n        </center>\n    </div>\n\n);\n\n\nIndex.getInitialProps = async function () {\n  \n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n  \n  if (typeof window !== 'undefined') {\n    localStorage.setItem('data', JSON.stringify(data));\n  }\n  \n  \n  \n  return {\n    shows: data.map(entry => entry.show)\n  };\n  \n}\n\n\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}