{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/commodore64/ombd-next/pages/favorites.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { autorun } from 'mobx';\nimport localStorage from 'mobx-localstorage';\n\nvar Favorites = function Favorites(props) {\n  return __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.show.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.show.summary), props.show.image ? __jsx(\"img\", {\n    src: props.show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }) : null));\n};\n\nFavorites.getInitialProps = function _callee() {\n  var id, res, show, i;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = 0;\n          autorun(function () {\n            id = JSON.parse(localStorage.getItem(\"favorite\"));\n          });\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          show = _context.sent;\n\n          for (i = 0; i < id.length; i++) {\n            console.log(array[i]);\n          }\n\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Favorites;","map":{"version":3,"sources":["/home/commodore64/ombd-next/pages/favorites.js"],"names":["autorun","localStorage","Favorites","props","show","name","summary","image","medium","getInitialProps","id","JSON","parse","getItem","fetch","res","json","i","length","console","log","array"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SACnB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAf,CAFA,EAGCH,KAAK,CAACC,IAAN,CAAWG,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWG,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA2D,IAH5D,CADJ,CADmB;AAAA,CAAvB;;AAWAN,SAAS,CAACO,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBC,UAAAA,EAFsB,GAEjB,CAFiB;AAG1BV,UAAAA,OAAO,CAAC,YAAM;AACZU,YAAAA,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWX,YAAY,CAACY,OAAb,CAAqB,UAArB,CAAX,CAAL;AACD,WAFM,CAAP;AAH0B;AAAA,2CAQRC,KAAK,wCAAiCJ,EAAjC,EARG;;AAAA;AAQpBK,UAAAA,GARoB;AAAA;AAAA,2CASPA,GAAG,CAACC,IAAJ,EATO;;AAAA;AASpBZ,UAAAA,IAToB;;AAW1B,eAASa,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGP,EAAE,CAACQ,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClCE,YAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACJ,CAAD,CAAjB;AACD;;AAMDE,UAAAA,OAAO,CAACC,GAAR,yBAA6BhB,IAAI,CAACC,IAAlC;AAnB0B,2CAqBnB;AAACD,YAAAA,IAAI,EAAJA;AAAD,WArBmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AA0BA,eAAeF,SAAf","sourcesContent":["import { autorun } from 'mobx';\nimport localStorage from 'mobx-localstorage';\n\nconst Favorites = props => (\n    <div className=\"container\">\n        <center>\n        <h1>{props.show.name}</h1>\n        <p>{props.show.summary}</p>\n        {props.show.image ? <img src={props.show.image.medium} /> : null}\n        </center>\n    </div>\n);\n\n\nFavorites.getInitialProps = async function() {\n  \n  let id = 0;\n  autorun(() => {\n    id = JSON.parse(localStorage.getItem(\"favorite\"));\n  });\n\n    \n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  for (let i = 0; i < id.length; i++) {\n    console.log(array[i]);\n  }\n  \n\n\n  \n\n  console.log(`Fetched show: ${show.name}`);\n\n  return {show}\n\n}\n\n\nexport default Favorites;"]},"metadata":{},"sourceType":"module"}