{"ast":null,"code":"var _jsxFileName = \"/home/commodore64/ombd-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { autorun } from 'mobx';\nimport localStorage from 'mobx-localstorage';\nautorun(() => {\n  console.log(localStorage.getItem('foo'));\n});\nlocalStorage.setItem('foo', 'bar');\n\nconst Index = props => __jsx(\"div\", {\n  className: \"container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"div\", {\n  className: \"col-3\",\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card text-white bg-primary mb-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, show.name, __jsx(\"h4\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, show.type), __jsx(\"img\", {\n  src: show.image.medium,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n})))))));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/commodore64/ombd-next/pages/index.js"],"names":["fetch","autorun","localStorage","console","log","getItem","setItem","Index","props","shows","map","show","id","name","type","image","medium","getInitialProps","res","data","json","length","entry"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEAD,OAAO,CAAC,MAAM;AACZE,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,OAAb,CAAqB,KAArB,CAAZ;AACD,CAFM,CAAP;AAIAH,YAAY,CAACI,OAAb,CAAqB,KAArB,EAA4B,KAA5B;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IACf;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGI;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACCA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACrB;AAAK,EAAA,SAAS,EAAC,OAAf;AAAuB,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8BD,IAAI,CAACE,IAAnC,EACI;AAAI,EAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BF,IAAI,CAACG,IAAjC,CADJ,EAEI;AAAK,EAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,CAAWC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADJ,CADC,CADD,CAHJ,CADJ;;AAoBAT,KAAK,CAACU,eAAN,GAAwB,kBAAkB;AACxC,QAAMC,GAAG,GAAG,MAAMlB,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMmB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAjB,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4Be,IAAI,CAACE,MAAO,EAArD;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAEU,IAAI,CAACT,GAAL,CAASY,KAAK,IAAIA,KAAK,CAACX,IAAxB;AADF,GAAP;AAGD,CATD;;AAaA,eAAeJ,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { autorun } from 'mobx';\nimport localStorage from 'mobx-localstorage';\n\nautorun(() => {\n  console.log(localStorage.getItem('foo'));\n});\n\nlocalStorage.setItem('foo', 'bar');\n\n\nconst Index = props => (\n    <div className=\"container\">\n        \n\n        <div className=\"row\">\n        {props.shows.map(show => (\n        <div className=\"col-3\" key={show.id}>\n            <div className=\"card text-white bg-primary mb-4\">\n                <div className=\"card-header\">{show.name}\n                    <h4 className=\"card-title\">{show.type}</h4>\n                    <img src={show.image.medium} />\n                </div>\n            </div>\n        </div>\n        ))}\n        </div>\n\n    </div>\n);\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n}\n\n\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}