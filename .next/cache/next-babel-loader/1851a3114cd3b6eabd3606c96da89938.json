{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/commodore64/ombd-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { autorun } from 'mobx';\nimport localStorage from 'mobx-localstorage';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    className: \"form-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    \"class\": \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    \"class\": \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    \"class\": \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    \"class\": \"form-control\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    \"class\": \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    id: \"inputState\",\n    \"class\": \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Choose...\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"...\"))), __jsx(\"button\", {\n    type: \"submit\",\n    \"class\": \"btn btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Search\"))), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(\"div\", {\n      className: \"column-4\",\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card text-white bg-primary mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, show.name, __jsx(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, show.type), __jsx(\"img\", {\n      src: show.image.medium,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n\n          if (true) {\n            localStorage.setItem('foo', 'bar');\n          }\n\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/commodore64/ombd-next/pages/index.js"],"names":["fetch","autorun","localStorage","Index","props","shows","map","show","id","name","type","image","medium","getInitialProps","res","json","data","console","log","length","setItem","entry"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { autorun } from 'mobx';\nimport localStorage from 'mobx-localstorage';\n\n\n\nconst Index = props => (\n    \n    <div className=\"container\">\n        <form className=\"form-inline\">\n          <div class=\"row\">\n            <div class=\"column\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"First name\" />\n            </div>\n            <div class=\"column\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Last name\" />\n            </div>\n            <div class=\"column\">\n              <select id=\"inputState\" class=\"form-control\">\n                <option selected>Choose...</option>\n                <option>...</option>\n              </select>\n            </div>\n            <button type=\"submit\" class=\"btn btn-info\">Search</button>\n          </div>\n        </form>\n        \n        <hr/>\n\n        <div className=\"row\">\n        {props.shows.map(show => (\n        <div className=\"column-4\" key={show.id}>\n            <div className=\"card text-white bg-primary mb-4\">\n                <div className=\"card-header\">{show.name}\n                    <h4 className=\"card-title\">{show.type}</h4>\n                    <img src={show.image.medium} />\n                </div>\n            </div>\n        </div>\n        ))}\n        </div>\n\n    </div>\n);\n\n\nIndex.getInitialProps = async function () {\n  \n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n  \n  if (typeof window !== 'undefined') {\n    localStorage.setItem('foo', 'bar');\n  }\n  \n  \n  \n  return {\n    shows: data.map(entry => entry.show)\n  };\n  \n}\n\n\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}