{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { observable, computed, action, decorate } from 'mobx';\nimport { onError } from 'mobx-react';\n\nclass MovieStore {\n  constructor() {\n    _defineProperty(this, \"movielist\", []);\n  }\n\n  get count() {\n    return this.movielist.length;\n  }\n\n  set_movies(array) {\n    this.movielist = array || [];\n  }\n\n  add_movies(object) {\n    this.movielist.push(object);\n  }\n\n}\n\ndecorate(MovieStore, {\n  movielist: observable,\n  count: computed,\n  set_movies: action,\n  add_movies: action\n});\nonError(error => {\n  console.log(error);\n});\nconst store = new MovieStore();\nexport default store;","map":{"version":3,"sources":["/home/commodore64/ombd-next/store.js"],"names":["observable","computed","action","decorate","onError","MovieStore","count","movielist","length","set_movies","array","add_movies","object","push","error","console","log","store"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,UAAN,CAAiB;AAAA;AAAA,uCACD,EADC;AAAA;;AAGb,MAAIC,KAAJ,GAAY;AACR,WAAO,KAAKC,SAAL,CAAeC,MAAtB;AACH;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,SAAKH,SAAL,GAAiBG,KAAK,IAAI,EAA1B;AACH;;AAEDC,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,SAAKL,SAAL,CAAeM,IAAf,CAAoBD,MAApB;AACH;;AAbY;;AAgBjBT,QAAQ,CAACE,UAAD,EAAa;AACjBE,EAAAA,SAAS,EAAEP,UADM;AAEjBM,EAAAA,KAAK,EAAEL,QAFU;AAGjBQ,EAAAA,UAAU,EAAEP,MAHK;AAIjBS,EAAAA,UAAU,EAAET;AAJK,CAAb,CAAR;AAOAE,OAAO,CAACU,KAAK,IAAI;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,CAFM,CAAP;AAIA,MAAMG,KAAK,GAAG,IAAIZ,UAAJ,EAAd;AACA,eAAeY,KAAf","sourcesContent":["import { observable, computed, action, decorate}  from 'mobx';\nimport { onError } from 'mobx-react';\n\nclass MovieStore {\n    movielist = [];\n\n    get count() {\n        return this.movielist.length;\n    }\n\n    set_movies(array) {\n        this.movielist = array || [];\n    }\n\n    add_movies(object) {\n        this.movielist.push(object);\n    }\n}\n\ndecorate(MovieStore, {\n    movielist: observable,\n    count: computed,\n    set_movies: action,\n    add_movies: action\n});\n\nonError(error => {\n    console.log(error);\n});\n\nconst store = new MovieStore();\nexport default store;"]},"metadata":{},"sourceType":"module"}