{"version":3,"file":"static/webpack/static/development/pages/hook.js.f1adba3bbbd93ff0fc48.hot-update.js","sources":["webpack:///./pages/hook.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport localStorage from 'mobx-localstorage'; \n\nfunction Todo({todo, index, completeTodo, deleteTodo, activeTodo}) {\n  return <div style={{textDecoration: todo.isCompleted ? 'line-through' : '' }} \n  className=\"todo\">\n  { todo.text }\n  <div>\n    <button onClick={() => completeTodo(index)}>Complate</button>\n    <button onClick={() => activeTodo(index)}>Active</button>\n    <button onClick={() => deleteTodo(index)}>Delete</button>\n  </div>\n  </div>;\n}\n\nfunction TodoForm({addTodo}) {\n  const [value, setValue] = useState('');\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!value) return;\n    addTodo(value);\n    setValue('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\"\n       className=\"input\" \n       value={value} \n       placeholder=\"Add Todo...\"\n       onChange={e => setValue (e.target.value)}/>\n    </form>\n  )\n}\n\n\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    if(todos !== null){\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  const addTodo = text => {\n    const NewTodos = [...todos, {text, isCompleted:false}];\n    setTodos(NewTodos);\n    localStorage.setItem('todos', JSON.stringify(NewTodos));\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n  };\n\n  const activeTodo = index => {\n    const activeTodos = [...todos];\n    activeTodos[index].isCompleted = false;\n    setTodos(activeTodos);\n  };\n\n  return (\n    <div className=\"app\"> \n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo key={index} \n          index={index} \n          todo={todo} \n          completeTodo={completeTodo}\n          deleteTodo={deleteTodo}\n          activeTodo={activeTodo}\n          />\n        ))}\n\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}