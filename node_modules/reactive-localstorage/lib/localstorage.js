"use strict";
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var LocalStorage = /** @class */ (function () {
    function LocalStorage(window, storage) {
        var _this = this;
        this._events = {};
        if (window) {
            this.supported = true;
        }
        else {
            this.supported = false;
            window = new Window();
        }
        this.storage = storage || window.localStorage;
        listen(window, function (_a) {
            var key = _a.key, newValue = _a.newValue;
            if (!key)
                return;
            _this.feed(key, newValue);
        });
    }
    Object.defineProperty(LocalStorage.prototype, "length", {
        get: function () {
            return this.storage.length;
        },
        enumerable: true,
        configurable: true
    });
    LocalStorage.prototype.key = function (index) {
        return this.storage.key(index);
    };
    LocalStorage.prototype.getItem = function (key) {
        return this.storage.getItem(key);
    };
    LocalStorage.prototype.setItem = function (key, value) {
        this.storage.setItem(key, value);
        this.emit('change', key, value);
    };
    LocalStorage.prototype.removeItem = function (key) {
        this.storage.removeItem(key);
        this.emit('change', key, null);
    };
    LocalStorage.prototype.clear = function () {
        this.storage.clear();
    };
    LocalStorage.prototype.on = function (name, fn) {
        var set = this._events[name];
        if (!set) {
            this._events[name] = set = new Set();
        }
        set.add(fn);
    };
    LocalStorage.prototype.off = function (name, fn) {
        var set = this._events[name];
        if (set) {
            set.delete(fn);
        }
    };
    LocalStorage.prototype.feed = function (key, newValue) {
        this.emit('change', key, newValue);
    };
    LocalStorage.prototype.emit = function (name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var e_1, _a;
        var set = this._events[name];
        if (set) {
            try {
                for (var _b = __values(set.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var fn = _c.value;
                    fn.apply(null, args);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    return LocalStorage;
}());
exports.LocalStorage = LocalStorage;
function listen(target, cb) {
    if (target.addEventListener) {
        target.addEventListener('storage', cb, true);
    }
    else if (target.attachEvent) {
        target.attachEvent('storage', cb);
    }
    else {
        return false;
    }
    return true;
}
exports.listen = listen;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxzdG9yYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xvY2Fsc3RvcmFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtJQVFFLHNCQUFZLE1BQWUsRUFBRSxPQUFpQjtRQUE5QyxpQkFZQztRQWhCUyxZQUFPLEdBRWIsRUFBRSxDQUFBO1FBR0osSUFBSSxNQUFNLEVBQUU7WUFDVixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtTQUN0QjthQUFNO1lBQ0wsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUE7WUFDdEIsTUFBTSxHQUFHLElBQUksTUFBTSxFQUFFLENBQUE7U0FDdEI7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sSUFBSSxNQUFNLENBQUMsWUFBWSxDQUFBO1FBQzdDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsVUFBQyxFQUFpQjtnQkFBZixZQUFHLEVBQUUsc0JBQVE7WUFDN0IsSUFBSSxDQUFDLEdBQUc7Z0JBQUUsT0FBTTtZQUNoQixLQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQTtRQUMxQixDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxzQkFBSSxnQ0FBTTthQUFWO1lBQ0UsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQTtRQUM1QixDQUFDOzs7T0FBQTtJQUVELDBCQUFHLEdBQUgsVUFBSSxLQUFhO1FBQ2YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUNoQyxDQUFDO0lBRUQsOEJBQU8sR0FBUCxVQUFRLEdBQVc7UUFDakIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNsQyxDQUFDO0lBRUQsOEJBQU8sR0FBUCxVQUFRLEdBQVcsRUFBRSxLQUFhO1FBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQTtRQUNoQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFDakMsQ0FBQztJQUVELGlDQUFVLEdBQVYsVUFBVyxHQUFXO1FBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUNoQyxDQUFDO0lBRUQsNEJBQUssR0FBTDtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUE7SUFDdEIsQ0FBQztJQUVELHlCQUFFLEdBQUYsVUFBaUQsSUFBTyxFQUFFLEVBQW1DO1FBQzNGLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDNUIsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNSLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUE7U0FDckM7UUFDRCxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFBO0lBQ2IsQ0FBQztJQUVELDBCQUFHLEdBQUgsVUFBa0QsSUFBTyxFQUFFLEVBQW1DO1FBQzVGLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDOUIsSUFBSSxHQUFHLEVBQUU7WUFDUCxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1NBQ2Y7SUFDSCxDQUFDO0lBRUQsMkJBQUksR0FBSixVQUFLLEdBQVcsRUFBRSxRQUF1QjtRQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUE7SUFDcEMsQ0FBQztJQUVTLDJCQUFJLEdBQWQsVUFDRSxJQUFPO1FBQ1AsY0FBc0Y7YUFBdEYsVUFBc0YsRUFBdEYscUJBQXNGLEVBQXRGLElBQXNGO1lBQXRGLDZCQUFzRjs7O1FBRXRGLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDOUIsSUFBSSxHQUFHLEVBQUU7O2dCQUNQLEtBQWlCLElBQUEsS0FBQSxTQUFBLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQSxnQkFBQSw0QkFBRTtvQkFBMUIsSUFBTSxFQUFFLFdBQUE7b0JBQ1gsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUE7aUJBQ3JCOzs7Ozs7Ozs7U0FDRjtJQUNILENBQUM7SUFDSCxtQkFBQztBQUFELENBQUMsQUE5RUQsSUE4RUM7QUE5RVksb0NBQVk7QUFvRnpCLFNBQWdCLE1BQU0sQ0FBQyxNQUFjLEVBQUUsRUFBd0Q7SUFDN0YsSUFBSSxNQUFNLENBQUMsZ0JBQWdCLEVBQUU7UUFDM0IsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUE7S0FDN0M7U0FBTSxJQUFJLE1BQU0sQ0FBQyxXQUFXLEVBQUU7UUFDN0IsTUFBTSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUE7S0FDbEM7U0FBTTtRQUNMLE9BQU8sS0FBSyxDQUFBO0tBQ2I7SUFDRCxPQUFPLElBQUksQ0FBQTtBQUNiLENBQUM7QUFURCx3QkFTQyJ9